			ARRAYS-

Basic -

3.0.1 :002 > ary=['1','sam','34.5']
 => ["1", "sam", "34.5"] 

3.0.1 :016 > Array.new(3){Array.new(2)}
 => [[nil, nil], [nil, nil], [nil, nil]] 
3.0.1 :017 > arr=[1,2,3,4]
 => [1, 2, 3, 4] 
3.0.1 :018 > arr[2]
 => 3 
3.0.1 :019 > arr[30]
 => nil 
3.0.1 :022 > arr[2..4]
 => [3, 4] 
3.0.1 :023 > arr[2...4]
 => [3, 4] 
3.0.1 :024 > arr[2...-3]
 => [] 
3.0.1 :025 > arr[4..-3]
 => [] 
3.0.1 :026 > arr[1..-3]
 => [2] 
3.0.1 :027 > arr.at(0)
 => 1 
3.0.1 :028 > arr.at(4)
 => nil 
3.0.1 :029 > arr.at(3)
 => 4 


first and last-

3.0.1 :034 > arr=[1,2,3,4,5,6,7,8]
 => [1, 2, 3, 4, 5, 6, 7, 8] 
3.0.1 :035 > arr.first
 => 1 
3.0.1 :036 > arr.last
 => 8 

take and drop method-

3.0.1 :038 > arr
 => [1, 2, 3, 4, 5, 6, 7, 8] 
3.0.1 :039 > arr.take(3)
 => [1, 2, 3] 
3.0.1 :040 > arr
 => [1, 2, 3, 4, 5, 6, 7, 8] 
3.0.1 :041 > arr.drop(3)
 => [4, 5, 6, 7, 8] 


length and count method-
3.0.1 :042 > arr.length
 => 8 
3.0.1 :043 > arr.count
 => 8 


empty? Method-
3.0.1 :046 > arr.empty?
 => false 
3.0.1 :047 > aar=[]
 => [] 
3.0.1 :048 > aar.empty?
 => true 

include? Method-
3.0.1 :049 > arr.include?(4)
 => true 
3.0.1 :050 > arr.include?(10)
 => false 

