		HASHES:



creating hashes-

3.0.1 :011 > Hash.new
 => {} 
3.0.1 :012 > h=Hash[]
 => {} 
3.0.1 :013 > h
 => {} 
3.0.1 :014 > a={}
 => {} 
3.0.1 :015 > a.class
 => Hash 
3.0.1 :016 > a={name:'mayanka' ,age:22}
 => {:name=>"mayanka", :age=>22} 
3.0.1 :017 > b=[name:'alex', age:23]
 => [{:name=>"alex", :age=>23}] 
3.0.1 :018 > a.class
 => Hash 
3.0.1 :019 > b.class
 => Array 


accessing hashes-

3.0.1 :020 > a
 => {:name=>"mayanka", :age=>22} 
3.0.1 :021 > a[:name]
 => "mayanka" 
3.0.1 :022 > a[:age]
 => 22 

deleting elements-

3.0.1 :028 > a.delete(:name)
 => "mayanka" 
3.0.1 :029 > a
 => {:age=>22} 


include method-

3.0.1 :029 > a
 => {:age=>22} 
3.0.1 :030 > a.include?(:name)
 => false 
3.0.1 :031 > a.include?(:age)
 => true 



modifying a hash element-

3.0.1 :053 > a
 => {:age=>12} 
3.0.1 :054 > a[:age]=15
 => 15 
3.0.1 :055 > a
 => {:age=>15} 

.default method-

3.0.1 :050 > c.default
 => nil 
3.0.1 :051 > c.default=false
 => false 
3.0.1 :052 > c.default
 => false 

.delete if method-

3.0.1 :057 > a
 => {:age=>15} 
3.0.1 :058 > a.delete_if{|key,value| value >10}
 => {} 
3.0.1 :059 > a
 => {} 

.any? Method-

3.0.1 :008 > a.any?([:age2,76])
 => true 
3.0.1 :009 > a.any?([:age,76])
 => false 
3.0.1 :010 > a.any?([:age2,26])
 => false 

.empty? Method-

3.0.1 :012 > a
 => {:age1=>45, :age2=>76, :age3=>23, :age4=>12} 
3.0.1 :013 > a.empty?
 => false 
3.0.1 :014 > e={}
 => {} 
3.0.1 :015 > e.empty?
 => true 

eql? Method-
	checks if the key and the value of the two hashes are same or not

3.0.1 :016 > a
 => {:age1=>45, :age2=>76, :age3=>23, :age4=>12} 
3.0.1 :017 > b
 => {:roll1=>45, :roll2=>76, :roll3=>23, :roll4=>12} 
3.0.1 :018 > a.eql? b
 => false 
3.0.1 :019 > a.eql? a
 => true 
3.0.1 :020 > c={age1:23,age2:13,age3:67,age4:89}
 => {:age1=>23, :age2=>13, :age3=>67, :age4=>89} 
3.0.1 :021 > a.eql? c
 => false 
3.0.1 :025 > d = {age1:45,age2:76,age3:23,age4:12}
 => {:age1=>45, :age2=>76, :age3=>23, :age4=>12} 
3.0.1 :026 > a.eql? d
 => true 


3.0.1 :038 > h1 = {foo: 0, bar: 1, baz: 2}
 => {:foo=>0, :bar=>1, :baz=>2} 
3.0.1 :039 > h2 = {baz: 2, bar: 1, foo: 0}
 => {:baz=>2, :bar=>1, :foo=>0} 
3.0.1 :040 > h1.eql? h2
 => true

.replace method-

3.0.1 :033 > b
 => {:roll1=>45, :roll2=>76, :roll3=>23, :roll4=>12} 

3.0.1 :041 > b.replace({age1:22,age2:22,age3:22})
 => {:age1=>22, :age2=>22, :age3=>22} 
3.0.1 :042 > b
 => {:age1=>22, :age2=>22, :age3=>22} 

.invert method-

3.0.1 :046 > z ={age1:45,age2:76,age3:23,age4:12} 
 => {:age1=>45, :age2=>76, :age3=>23, :age4=>12} 
3.0.1 :047 > z.invert
 => {45=>:age1, 76=>:age2, 23=>:age3, 12=>:age4} 

.inspect method-

3.0.1 :044 > b
 => {:age1=>22, :age2=>22, :age3=>22} 
3.0.1 :045 > b.inspect
 => "{:age1=>22, :age2=>22, :age3=>22}" 

3.0.1 :048 > z
 => {:age1=>45, :age2=>76, :age3=>23, :age4=>12} 
3.0.1 :049 > z.inspect
 => "{:age1=>45, :age2=>76, :age3=>23, :age4=>12}" 
.keep_if method-

3.0.1 :050 > z
 => {:age1=>45, :age2=>76, :age3=>23, :age4=>12} 
3.0.1 :051 > z.keep_if{|key,value|key.start_with?('a')}
 => {:age1=>45, :age2=>76, :age3=>23, :age4=>12} 
3.0.1 :052 > z.keep_if{|key,value|key.start_with?('b')}
 => {} 
3.0.1 :053 > h1
 => {:foo=>0, :bar=>1, :baz=>2} 
3.0.1 :054 > h1.keep_if{|key,value|key.start_with?('b')}
 => {:bar=>1, :baz=>2}


.merge method-

3.0.1 :001 > a={name:'mayanka',age:23,marks:98}
 => {:name=>"mayanka", :age=>23, :marks=>98} 
3.0.1 :002 > b={attendance:49,semester:5}
 => {:attendance=>49, :semester=>5} 
3.0.1 :004 > a.merge b
 => {:name=>"mayanka", :age=>23, :marks=>98, :attendance=>49, :semester=>5} 

3.0.1 :008 > a
 => {:name=>"mayanka", :age=>23, :marks=>98} 
3.0.1 :009 > b
 => {:attendance=>49, :semester=>5} 
3.0.1 :010 > c
 => {:subject=>"english"} 
3.0.1 :011 > a.merge(b,c)
 => {:name=>"mayanka", :age=>23, :marks=>98, :attendance=>49, :semester=>5, :subject=>"english"} 


.length method-

3.0.1 :012 > a.length
 => 3 
3.0.1 :013 > b.length
 => 2 
3.0.1 :014 > c.length
 => 1 

.keys method-

3.0.1 :015 > a.keys
 => [:name, :age, :marks] 
3.0.1 :016 > b.keys
 => [:attendance, :semester] 
3.0.1 :017 > c.keys
 => [:subject] 


key value method-

3.0.1 :018 > a.key(23)
 => :age 
3.0.1 :019 > a.key(49)
 => nil 
3.0.1 :020 > a.key(98)
 => :marks 


.reject method-

3.0.1 :027 > a
 => {:name=>"mayanka", :age=>23, :marks=>98} 
3.0.1 :028 > a.reject {|key,value| key.start_with?('m')}
 => {:name=>"mayanka", :age=>23} 


.select method-

3.0.1 :047 > n={sd:12, mn:23, lo:46}
 => {:sd=>12, :mn=>23, :lo=>46} 
3.0.1 :048 > n.select{|key,value| value<20}
 => {:sd=>12} 

3.0.1 :041 > h = {foo: 0, bar: 1, baz: 2}
 => {:foo=>0, :bar=>1, :baz=>2} 
3.0.1 :042 > h.select {|key, value| value < 2 }
 => {:foo=>0, :bar=>1} 


.shift method-
3.0.1 :049 > n
 => {:sd=>12, :mn=>23, :lo=>46} 
3.0.1 :050 > n.shift
 => [:sd, 12] 
3.0.1 :051 > n
 => {:mn=>23, :lo=>46} 

.slice method-

3.0.1 :054 > a
 => {:name=>"mayanka", :age=>23, :marks=>98} 
3.0.1 :055 > a.slice(:name,:marks)
 => {:name=>"mayanka", :marks=>98} 
3.0.1 :056 > b
 => {:attendance=>49, :semester=>5} 
3.0.1 :057 > b.slice(:attendance)
 => {:attendance=>49} 


.values method-
3.0.1 :058 > a
 => {:name=>"mayanka", :age=>23, :marks=>98} 
3.0.1 :059 > b
 => {:attendance=>49, :semester=>5} 
3.0.1 :060 > c
 => {:subject=>"english"}
3.0.1 :062 > a.values
 => ["mayanka", 23, 98] 
3.0.1 :063 > b.values
 => [49, 5] 
3.0.1 :064 > c.values
 => ["english"] 

.values_at method-

3.0.1 :065 > a
 => {:name=>"mayanka", :age=>23, :marks=>98} 
3.0.1 :066 > a.values_at(:name)
 => ["mayanka"] 
3.0.1 :067 > a.values_at(:marks,:age)
 => [98, 23] 
3.0.1 :068 > b
 => {:attendance=>49, :semester=>5} 
3.0.1 :069 > b.values_at(:semester)
 => [5] 	

.rassoc method-
3.0.1 :071 > a
 => {:name=>"mayanka", :age=>23, :marks=>98} 
3.0.1 :072 > a.rassoc(23)
 => [:age, 23] 
3.0.1 :073 > a.rassoc('mayanka')
 => [:name, "mayanka"]  


.key? Method-

3.0.1 :071 > a
 => {:name=>"mayanka", :age=>23, :marks=>98} 
3.0.1 :074 > a.key?(:name)
 => true 
3.0.1 :075 > a.key?(:me)
 => false 
3.0.1 :076 > a.key?(:age)
 => true 
3.0.1 :077 > a.key?(:Age)
 => false 


.flatten method-

3.0.1 :080 > ah={mn:0,kn:[ln:[bn:0,cn:0]]}
 => {:mn=>0, :kn=>[{:ln=>[{:bn=>0, :cn=>0}]}]} 
3.0.1 :081 > ah.flatten(1)
 => [:mn, 0, :kn, [{:ln=>[{:bn=>0, :cn=>0}]}]] 
3.0.1 :082 > ah.flatten(2)
 => [:mn, 0, :kn, {:ln=>[{:bn=>0, :cn=>0}]}] 

  
