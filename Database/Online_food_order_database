Food ordering database

postgres=# create database foodordering;
CREATE DATABASE

postgres=# \dt
               List of relations
 Schema |        Name        | Type  |  Owner   
--------+--------------------+-------+----------
 public | cart               | table | postgres
 public | customer           | table | postgres
 public | customer_address   | table | postgres
 public | food_category      | table | postgres
 public | food_items         | table | postgres
 public | orders             | table | postgres
 public | restaurant_details | table | postgres
(7 rows)

postgres=# select * from cart;
 food_items_id | quantity | orders_id 
---------------+----------+-----------
             1 |        1 |         1
             6 |        1 |         1
             8 |        1 |         2
             9 |        1 |         3
            17 |        2 |         4
            21 |        1 |         5
            15 |        1 |         5
            15 |        1 |         6
            16 |        1 |         7
             6 |        1 |         7
(10 rows)

postgres=# select * from customer;
 id | first_name | last_name |   mobileno    |       email       |   password   
----+------------+-----------+---------------+-------------------+--------------
  1 | payal      | garg      | 9265759493    | payal@gmail.com   | ljnb^7
  2 | pooja      | rathi     | 9293955493    | pooja@gmail.com   | lhegrue09
  3 | alex       | stunn     | 90138247493   | alex@gmail.com    | ueifbe09
  4 | samay      | bonk      | 77628247490   | samay@gmail.com   | 735gdrcv
  5 | yash       | gera      | 88664247490   | yash@gmail.com    | 083287t5428
  6 | bash       | fran      | 88624432521   | bash@gmail.com    | jqbwucr34858
  7 | francis    | fran      | 851312342521  | francis@gmail.com | qoiy3885vh3
  8 | chloe      | boyr      | 325752342521  | chloe@gmail.com   | 03cryx22
  9 | ammy       | seea      | 0937824983521 | ammy@gmail.com    | 09349vt4r22
 10 | yashik     | chhabra   | 9274285723521 | yashik@gmail.com  | 92084cfj35
 11 | sahil      | kapoor    | 9930287521    | sahil@gmail.com   | 920j45c85
(11 rows)

postgres=# select * from customer_address;
 id | customer_id | address_type 
----+-------------+--------------
  1 |           3 | home
  2 |           6 | work
  3 |           2 | work
  4 |           8 | work
  5 |           8 | home
  6 |           9 | home
  7 |           1 | home
  8 |           7 | other
  9 |           7 | work
 10 |           4 | home
(10 rows)

postgres=# select * from food_category;
 id |       name       
----+------------------
  1 | starters
  2 | breads
  3 | chineese
  4 | desserts
  5 | coffee
  6 | shakes/smoothies
  7 | gravy
  8 | italian
  9 | dips
(9 rows)

postgres=# select * from food_items;
 id |       item       | price | categoryid 
----+------------------+-------+------------
  1 | fries            |   130 |          1
  3 | pasta            |   250 |          1
  4 | corns            |   120 |          1
  5 | sandwitch        |   150 |          1
  6 | noodles          |   200 |          3
  2 | pizza            |   300 |          8
  7 | garlic bread     |   125 |          2
  8 | oregano bread    |   130 |          2
  9 | multigrain bread |   135 |          2
 10 | munchoorian      |   135 |          3
 11 | waffles          |   200 |          4
 12 | pancakes         |   250 |          4
 13 | pudding          |   220 |          4
 14 | brownie          |   180 |          4
 15 | latte            |   210 |          5
 16 | mocha            |   215 |          5
 17 | frappe           |   250 |          5
 18 | nutella shake    |   250 |          6
 19 | brownie shake    |   260 |          6
 20 | korma            |   296 |          7
 21 | butter chicken   |   350 |          7
(21 rows)

postgres=# select * from orders;
 id | customerid |  status   
----+------------+-----------
  1 |          2 | confirmed
  2 |          4 | confirmed
  3 |          6 | pending
  4 |          1 | pending
  5 |          9 | confirmed
  6 |          8 | confirmed
  7 |          3 | confirmed
(7 rows)

postgres=# select * from restaurant_details ;
 id |   name   | contact_no |       email       
----+----------+------------+-------------------
  1 | eat sure | 9966774442 | eatsure@gmail.com
(1 row)


			
updated orders table-

foodordering=# select * from orders;
 id | customerid |  status   | date_of_order 
----+------------+-----------+---------------
  1 |          2 | confirmed | 2022-02-16
  2 |          4 | confirmed | 2022-02-16
  3 |          6 | pending   | 2022-02-20
  4 |          1 | pending   | 2022-02-18
  5 |          9 | confirmed | 2022-02-07
  6 |          8 | confirmed | 2022-02-02
  7 |          3 | confirmed | 2022-01-10
  8 |          6 | confirmed | 2022-01-20
(8 rows)





		QUERIES:


1.query to find all orders of a person-

postgres=# select * from orders where customerid in (select id from customer where first_name = 'alex');
 id | customerid |  status   
----+------------+-----------
  7 |          3 | confirmed
(1 row)


postgres=# select * from orders where customerid in (select id from customer where first_name='bash');
 id | customerid |  status   
----+------------+-----------
  3 |          6 | pending
  8 |          6 | confirmed
(2 rows)


2.query to display the name of customer with max orders-

foodordering=# select customerid from orders group by customerid order by count(customerid) desc limit 1;
 customerid 
------------
          6
(1 row)

foodordering=# select first_name from customer where id in (select customerid from orders group by customerid order by count(customerid) desc limit 1);
 first_name 
------------
 bash
(1 row)

3.query to display all the food items from category name-

foodordering=# select * from food_items where categoryid in(select id from food_category where name ='breads');
 id |       item       | price | categoryid 
----+------------------+-------+------------
  7 | garlic bread     |   125 |          2
  8 | oregano bread    |   130 |          2
  9 | multigrain bread |   135 |          2
(3 rows)

4.display the category with max food_items in it-

foodordering=# select * from food_category where id in(select categoryid from food_items group by categoryid order by count(categoryid) desc limit 1);
 id |   name   
----+----------
  4 | desserts
(1 row)


5.query to display the address type of customer with id orderid=4

foodordering=# select address_type from customer_address where customer_id in(select id from customer where id in (select customerid from orders where id = 4 ));
 address_type 
--------------
 home
(1 row)



6.query to find name of customer with max price order

postgres=# select sum(a.price*quantity),orders_id from cart inner join food_items as a on food_items_id = id group by orders_id;
 sum | orders_id 
-----+-----------
 135 |         3
 560 |         5
 500 |         4
 210 |         6
 130 |         2
 415 |         7
 330 |         1
(7 rows)

foodordering=# select first_name from customer inner join orders on customer.id=orders.customerid where orders.id in(select orders_id from cart inner join food_items as a on food_items_id = id group by orders_id order by sum(a.price*quantity) desc limit 1);
 first_name 
------------
 ammy
(1 row)



7.display name of users who don’t have any order-

foodordering=# select first_name from customer where id not in (select customerid from orders);
 first_name 
------------
 yash
 francis
 yashik
 sahil
(4 rows)



8.display name of food items ordered max no of times-

foodordering=# select item from food_items where id in (select food_items_id from cart group by food_items_id order by count(food_items_id) desc limit 1);
 item  
-------
 latte
(1 row)


9.display count of each food category-

foodordering=# select food_category.name,count(food_items.item) from food_category inner join food_items on food_category.id=food_items.categoryid group by food_category.name,food_items.categoryid;
       name       | count 
------------------+-------
 chineese         |     2
 coffee           |     3
 italian          |     1
 shakes/smoothies |     2
 gravy            |     2
 desserts         |     4
 starters         |     4
 breads           |     3
(8 rows)


10.display name of customers who ordered food before date ‘02-02-22’ -

foodordering=# select customerid from orders where date_of_order < '02-02-22' ;
 customerid 
------------
          3
          6
(2 rows)

foodordering=# select first_name from customer where id in(select customerid from orders where date_of_order < '02-02-22' );
 first_name 
------------
 alex
 bash
(2 rows)


11.display all the customers who have placed orders with no of orders in descnding order-

foodordering=# select customer.first_name,count(customerid) from customer inner join orders on customer.id=orders.customerid group by orders.customerid,customer.first_name order by count desc;
 first_name | count 
------------+-------
 bash       |     2
 samay      |     1
 alex       |     1
 ammy       |     1
 payal      |     1
 pooja      |     1
 chloe      |     1
(7 rows)

12.select all orders whose price is more than 500-

foodordering=# select orders_id from food_items inner join cart on food_items.id=cart.food_items_id group by orders_id having sum(food_items.price*cart.quantity)>500;
 orders_id 
-----------
         5
(1 row)

13. select name of customers whose orders are above 500-

foodordering=# select customer.first_name from customer inner join orders on customer.id=orders.customerid where orders.id in (select orders_id from food_items inner join cart on food_items.id=cart.food_items_id group by orders_id having sum(food_items.price*cart.quantity)>500);
 first_name 
------------
 ammy
(1 row)


14. select orders which are confirmed-

foodordering=# select id from orders where status = 'confirmed';
 id 
----
  1
  2
  5
  6
  7
  8
(6 rows)


15. select food items for which order has been confirmed-

foodordering=# select food_items.item from food_items inner join cart on food_items.id=cart.food_items_id where cart.orders_id in (select id from orders where status = 'confirmed');
      item      
----------------
 fries
 noodles
 oregano bread
 butter chicken
 latte
 latte
 mocha
 noodles
 munchoorian
(9 rows)

16. select no of different addresses -

foodordering=# select count(id),address_type from customer_address group by address_type;
 count | address_type 
-------+--------------
     4 | work
     1 | other
     5 | home
(3 rows)


17 find the no of confirmed and pending orders-


foodordering=# select status,count(status) from orders group by status;
  status   | count 
-----------+-------
 confirmed |     6
 pending   |     2
(2 rows)


18. query to display order id of the max order for months-

foodordering=# select max(id) from orders group by extract(month from date_of_order) ;
 max 
-----
   6
   8
(2 rows)


19. query to display order id of the max order for week-

foodordering=# select max(id) from orders group by extract(week from date_of_order) ;
 max 
-----
   8
   5
